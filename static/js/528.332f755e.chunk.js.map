{"version":3,"file":"static/js/528.332f755e.chunk.js","mappings":"kSAEaA,EAAUC,EAAAA,GAAAA,IAAH,sHAOPC,EAAaD,EAAAA,GAAAA,KAAH,kTAYVE,EAAYF,EAAAA,GAAAA,OAAH,+WAqBTG,EAAcH,EAAAA,GAAAA,MAAH,0W,SChCXI,EAAY,SAAC,GAAwB,EAAtBC,MAAuB,IAAhBC,EAAe,EAAfA,SAMjC,OACE,SAACP,EAAD,WACE,UAACE,EAAD,CAAYK,SAPK,SAAAC,GACnBA,EAAEC,iBACFF,EAASC,EAAEE,OAAOC,SAASC,OAAON,OAClCE,EAAEE,OAAOC,SAASC,OAAON,MAAQ,EAClC,EAGG,WACE,SAACH,EAAD,WACE,SAAC,MAAD,OAGF,SAACC,EAAD,CACES,KAAK,SACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,sBAKrB,E,kDC8BD,EAtDe,WAAO,IAAD,EACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,MAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAS,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,IAEhDC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,oGAEIN,GAAa,GAFjB,UAGgCO,EAAAA,EAAAA,IAAYH,EAAWT,GAHvD,UAIyC,KAD/Ba,EAHV,QAIsBC,QAAQC,OAJ9B,yCAKaC,EAAAA,GAAAA,MACL,sEANR,OASIjB,EAAUc,EAAcC,SACxBX,EAAcU,EAAcI,aAVhC,kDAYID,EAAAA,GAAAA,MAAY,wDAZhB,yBAcIX,GAAa,GAdjB,8EAFc,sBACTI,GADS,mCAmBdS,EACD,GAAE,CAACT,EAAWT,IAQf,OACE,6BACE,SAAChB,EAAD,CAAWE,SARM,SAAAiC,GACnBX,EAAgB,CAAEY,OAAQD,IAC1BlB,EAAQ,GACRF,EAAU,GACX,EAIsCd,MAAOwB,IACzCL,IAAa,SAACiB,EAAA,EAAD,IACbvB,EAAOiB,OAAS,GAAKN,IACpB,iCACE,SAACa,EAAA,EAAD,CAAYxB,OAAQA,KACpB,SAACyB,EAAA,EAAD,CAAUvB,KAAMA,EAAMC,QAASA,EAASC,WAAYA,QAGxD,SAAC,EAAAsB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  cursor: pointer;\n  background-color: #fff;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  background-color: #fff;\n  ::placeholder {\n    font: inherit;\n    background-color: #fff;\n    font-size: 18px;\n    border: none;\n    outline: none;\n  }\n`;\n","import { GoSearch } from 'react-icons/go';\nimport PropTypes from 'prop-types';\n\nimport {\n  Wrapper,\n  SearchForm,\n  SearchBtn,\n  SearchInput,\n} from './SearchBar.styled';\n\nexport const Searchbar = ({ value, onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(e.target.elements.search.value);\n    e.target.elements.search.value = '';\n  };\n  return (\n    <Wrapper>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchBtn>\n          <GoSearch />\n        </SearchBtn>\n\n        <SearchInput\n          name=\"search\"\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n      </SearchForm>\n    </Wrapper>\n  );\n};\n\nSearchbar.propTypes = {\n  value: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Paginate } from 'components/Paginate/Paginate';\nimport { Searchbar } from 'components/SearchBar/SearchBar';\nimport { useState, useEffect, Suspense } from 'react';\nimport toast from 'react-hot-toast';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'services/Api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('filter') ?? '';\n\n  useEffect(() => {\n    if (!movieName) return;\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        const fetchedMovies = await searchMovie(movieName, page);\n        if (fetchedMovies.results.length === 0) {\n          return toast.error(\n            'Sorry, we did not find any movies matching your query. Try again!'\n          );\n        }\n        setMovies(fetchedMovies.results);\n        setTotalPages(fetchedMovies.total_pages);\n      } catch (error) {\n        toast.error('Sorry, something went wrong. Try reloading the page!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, [movieName, page]);\n\n  const handleSubmit = query => {\n    setSearchParams({ filter: query });\n    setPage(1);\n    setMovies([]);\n  };\n\n  return (\n    <main>\n      <Searchbar onSubmit={handleSubmit} value={movieName} />\n      {isLoading && <Loader />}\n      {movies.length > 0 && movieName && (\n        <>\n          <MoviesList movies={movies} />\n          <Paginate page={page} setPage={setPage} totalPages={totalPages} />\n        </>\n      )}\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Wrapper","styled","SearchForm","SearchBtn","SearchInput","Searchbar","value","onSubmit","e","preventDefault","target","elements","search","name","type","autocomplete","autoFocus","placeholder","useState","movies","setMovies","page","setPage","totalPages","setTotalPages","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","searchMovie","fetchedMovies","results","length","toast","total_pages","getMovies","query","filter","Loader","MoviesList","Paginate","Suspense","fallback"],"sourceRoot":""}