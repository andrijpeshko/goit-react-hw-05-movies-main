{"version":3,"file":"static/js/779.b843694d.chunk.js","mappings":"kSAEaA,EAAcC,EAAAA,GAAAA,GAAH,kHAOXC,EAAaD,EAAAA,GAAAA,GAAH,gDAIVE,EAASF,EAAAA,GAAAA,GAAH,yFAMNG,EAAUH,EAAAA,GAAAA,EAAH,4C,SCuBpB,EApCgB,WACd,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEiCC,EAAAA,EAAAA,IAAkBN,GAFnD,OAEUO,EAFV,OAGIH,EAAWG,GAHf,gDAKIC,EAAAA,GAAAA,MAAY,kDALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACT,IAECG,GAKH,SAACR,EAAD,UACGQ,EAAQO,OAAS,EAChBP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,UAACjB,EAAD,YACE,SAACC,EAAD,UAASc,KACT,SAACb,EAAD,UAAUc,MAFKC,EADP,KAOZ,qEAbG,IAiBV,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 40px;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 28px;\n`;\n\nexport const Author = styled.h4`\n  font-weight: 500;\n  font-size: 20px;\n  margin-bottom: 12px;\n`;\n\nexport const Content = styled.p`\n  font-size: 16px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { fetchMovieReviews } from 'services/Api';\nimport { Author, Content, ReviewItem, ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const fetchedReviews = await fetchMovieReviews(movieId);\n        setReviews(fetchedReviews);\n      } catch (error) {\n        toast.error('Sorry, we could not find info about this movie');\n      }\n    }\n    getReviews();\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <ReviewsList>\n      {reviews.length > 0 ? (\n        reviews.map(({ author, content, id }) => (\n          <ReviewItem key={id}>\n            <Author>{author}</Author>\n            <Content>{content}</Content>\n          </ReviewItem>\n        ))\n      ) : (\n        <p>We dont have any reviews for this movie</p>\n      )}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsList","styled","ReviewItem","Author","Content","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","fetchedReviews","toast","getReviews","length","map","author","content","id"],"sourceRoot":""}